// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using core8_vue_mysql.Helpers;

#nullable disable

namespace core8_vue_mysql.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250805083711_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("core8_vue_mysql.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlertStocks")
                        .HasColumnType("int")
                        .HasColumnName("alertstocks");

                    b.Property<string>("Category")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("costprice");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("createdAt");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<int?>("CriticalStocks")
                        .HasColumnType("int")
                        .HasColumnName("criticalstocks");

                    b.Property<string>("Descriptions")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descriptions");

                    b.Property<string>("ProductPicture")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("productpicture");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("saleprice");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("sellprice");

                    b.Property<string>("Unit")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("unit");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("updatedAt");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("core8_vue_mysql.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("createdAt");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("firstname");

                    b.Property<int>("Isactivated")
                        .HasColumnType("int")
                        .HasColumnName("isactivated");

                    b.Property<int>("Isblocked")
                        .HasColumnType("int")
                        .HasColumnName("isblocked");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("lastname");

                    b.Property<int>("Mailtoken")
                        .HasColumnType("int")
                        .HasColumnName("mailtoken");

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("password");

                    b.Property<string>("Profilepic")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("profilepic");

                    b.Property<string>("Qrcodeurl")
                        .HasColumnType("text")
                        .HasColumnName("qrcodeurl");

                    b.Property<string>("Roles")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("roles");

                    b.Property<string>("Secretkey")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("secretkey");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("updatedAt");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
